// <auto-generated />
using System;
using BlogApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogAppMVC.Migrations
{
    [DbContext(typeof(BlogContext))]
    partial class BlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlogApp.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description 1",
                            Name = "Author 1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description 1",
                            Name = "Author 2"
                        });
                });

            modelBuilder.Entity("BlogApp.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogId = 1,
                            Content = "Content 1",
                            CreatedAt = new DateTime(2024, 6, 17, 11, 58, 30, 742, DateTimeKind.Local).AddTicks(1052),
                            Title = "Book 1"
                        },
                        new
                        {
                            Id = 2,
                            BlogId = 2,
                            Content = "Content 2",
                            CreatedAt = new DateTime(2024, 6, 17, 11, 58, 30, 742, DateTimeKind.Local).AddTicks(1091),
                            Title = "Book 2"
                        },
                        new
                        {
                            Id = 3,
                            BlogId = 2,
                            Content = "Content 3",
                            CreatedAt = new DateTime(2024, 6, 17, 11, 58, 30, 742, DateTimeKind.Local).AddTicks(1093),
                            Title = "Book 3"
                        },
                        new
                        {
                            Id = 4,
                            BlogId = 1,
                            Content = "Content 4",
                            CreatedAt = new DateTime(2024, 6, 17, 11, 58, 30, 742, DateTimeKind.Local).AddTicks(1095),
                            Title = "Book 4"
                        },
                        new
                        {
                            Id = 5,
                            BlogId = 1,
                            Content = "Content 5",
                            CreatedAt = new DateTime(2024, 6, 17, 11, 58, 30, 742, DateTimeKind.Local).AddTicks(1097),
                            Title = "Book 5"
                        });
                });

            modelBuilder.Entity("BlogApp.Models.Post", b =>
                {
                    b.HasOne("BlogApp.Models.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("BlogApp.Models.Blog", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
