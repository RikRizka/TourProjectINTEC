// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductCatalog.Data;

#nullable disable

namespace ProductCatalog.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20240527133043_Create Db")]
    partial class CreateDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductCatalog.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Kids Book"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Food"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Comik"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Adult Book"
                        });
                });

            modelBuilder.Entity("ProductCatalog.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 3,
                            ProductName = "Binggo",
                            price = 10.1m
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 2,
                            ProductName = "Cimochi",
                            price = 3.5m
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 4,
                            ProductName = "Loulou",
                            price = 2.19m
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 4,
                            ProductName = "Coucou",
                            price = 6.1m
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 5,
                            ProductName = "Desparcito",
                            price = 6.1m
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 4,
                            ProductName = "Belachelijk",
                            price = 6.1m
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 1,
                            ProductName = "Marsupilami",
                            price = 6.1m
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 2,
                            ProductName = "NumNum",
                            price = 6.1m
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 1,
                            ProductName = "Tom&Jery",
                            price = 6.1m
                        });
                });

            modelBuilder.Entity("ProductCatalog.Models.Product", b =>
                {
                    b.HasOne("ProductCatalog.Models.Category", "Category")
                        .WithMany("Producten")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductCatalog.Models.Category", b =>
                {
                    b.Navigation("Producten");
                });
#pragma warning restore 612, 618
        }
    }
}
